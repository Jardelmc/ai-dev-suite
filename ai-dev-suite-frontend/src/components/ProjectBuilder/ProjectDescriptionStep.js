import React from 'react';
import {
  Box,
  Typography,
  TextField,
  Grid,
  Alert,
  Paper,
  Chip,
} from '@mui/material';
import {
  Title as TitleIcon,
  Description as DescriptionIcon,
  Business as BusinessIcon,
  Engineering as TechnicalIcon,
} from '@mui/icons-material';

const DESCRIPTION_TIPS = [
  "Seja espec√≠fico sobre o dom√≠nio do neg√≥cio (e-commerce, sa√∫de, educa√ß√£o, etc.)",
  "Mencione os tipos de usu√°rios que ir√£o interagir com o sistema",
  "Descreva os principais fluxos de trabalho ou processos",
  "Inclua integra√ß√µes com sistemas externos, se houver",
  "Mencione requisitos de performance ou volume de dados esperado",
];

const BUSINESS_RULES_EXAMPLES = [
  "Apenas usu√°rios autenticados podem fazer pedidos",
  "Produtos com estoque zero n√£o devem aparecer na listagem",
  "Descontos s√≥ podem ser aplicados por usu√°rios admin",
  "Envio de email de confirma√ß√£o ap√≥s cada transa√ß√£o",
  "Backup autom√°tico dos dados a cada 24 horas",
];

const TECHNICAL_REQUIREMENTS_EXAMPLES = [
  "API deve responder em menos de 200ms",
  "Sistema deve suportar 1000 usu√°rios simult√¢neos",
  "Dados devem ser criptografados em tr√¢nsito e em repouso",
  "Logs devem ser mantidos por pelo menos 90 dias",
  "Integra√ß√£o com API externa de pagamentos (Stripe/PagSeguro)",
];

const ProjectDescriptionStep = ({ data, onUpdate }) => {
  const handleFieldChange = (field) => (event) => {
    onUpdate({ [field]: event.target.value });
  };

  const getWordCount = (text) => {
    return text ? text.trim().split(/\s+/).filter(word => word.length > 0).length : 0;
  };

  return (
    <Box>
      <Typography variant="h6" gutterBottom>
        Descri√ß√£o do Sistema
      </Typography>
      
      <Typography variant="body2" color="text.secondary" paragraph>
        Forne√ßa informa√ß√µes detalhadas sobre o sistema que voc√™ deseja desenvolver. 
        Quanto mais espec√≠fico, melhor ser√° a solu√ß√£o t√©cnica gerada.
      </Typography>

      <Grid container spacing={3}>
        {/* Project Name */}
        <Grid item xs={12}>
          <TextField
            fullWidth
            required
            label="Nome do Projeto"
            value={data.projectName}
            onChange={handleFieldChange('projectName')}
            placeholder="Ex: Sistema de Gest√£o de Vendas Online"
            InputProps={{
              startAdornment: <TitleIcon sx={{ mr: 1, color: 'text.secondary' }} />,
            }}
            helperText="Nome que identifica seu projeto/sistema"
          />
        </Grid>

        {/* Project Description */}
        <Grid item xs={12}>
          <TextField
            fullWidth
            required
            multiline
            rows={6}
            label="Descri√ß√£o Geral do Sistema"
            value={data.projectDescription}
            onChange={handleFieldChange('projectDescription')}
            placeholder="Descreva detalhadamente o que o sistema deve fazer, quem s√£o os usu√°rios, principais funcionalidades..."
            InputProps={{
              startAdornment: <DescriptionIcon sx={{ mr: 1, mt: 1, color: 'text.secondary' }} />,
            }}
            helperText={`${getWordCount(data.projectDescription)} palavras - Seja detalhado e espec√≠fico`}
          />

          <Paper sx={{ p: 2, mt: 2, bgcolor: 'background.default' }}>
            <Typography variant="subtitle2" gutterBottom>
              üí° Dicas para uma boa descri√ß√£o:
            </Typography>
            <Box component="ul" sx={{ pl: 2, m: 0 }}>
              {DESCRIPTION_TIPS.map((tip, index) => (
                <Typography component="li" variant="body2" key={index} sx={{ mb: 0.5 }}>
                  {tip}
                </Typography>
              ))}
            </Box>
          </Paper>
        </Grid>

        {/* Business Rules */}
        <Grid item xs={12} md={6}>
          <TextField
            fullWidth
            multiline
            rows={8}
            label="Regras de Neg√≥cio"
            value={data.businessRules}
            onChange={handleFieldChange('businessRules')}
            placeholder="Liste as principais regras de neg√≥cio, valida√ß√µes, processos espec√≠ficos do dom√≠nio..."
            InputProps={{
              startAdornment: <BusinessIcon sx={{ mr: 1, mt: 1, color: 'text.secondary' }} />,
            }}
            helperText={`${getWordCount(data.businessRules)} palavras - Regras espec√≠ficas do seu dom√≠nio`}
          />

          <Paper sx={{ p: 2, mt: 2, bgcolor: 'info.light', color: 'info.contrastText' }}>
            <Typography variant="subtitle2" gutterBottom>
              Exemplos de regras de neg√≥cio:
            </Typography>
            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>
              {BUSINESS_RULES_EXAMPLES.slice(0, 3).map((example, index) => (
                <Chip key={index} label={example} size="small" variant="outlined" />
              ))}
            </Box>
          </Paper>
        </Grid>

        {/* Technical Requirements */}
        <Grid item xs={12} md={6}>
          <TextField
            fullWidth
            multiline
            rows={8}
            label="Requisitos T√©cnicos"
            value={data.technicalRequirements}
            onChange={handleFieldChange('technicalRequirements')}
            placeholder="Performance, seguran√ßa, integra√ß√£o, escalabilidade, volumes de dados esperados..."
            InputProps={{
              startAdornment: <TechnicalIcon sx={{ mr: 1, mt: 1, color: 'text.secondary' }} />,
            }}
            helperText={`${getWordCount(data.technicalRequirements)} palavras - Requisitos n√£o-funcionais`}
          />

          <Paper sx={{ p: 2, mt: 2, bgcolor: 'success.light', color: 'success.contrastText' }}>
            <Typography variant="subtitle2" gutterBottom>
              Exemplos de requisitos t√©cnicos:
            </Typography>
            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>
              {TECHNICAL_REQUIREMENTS_EXAMPLES.slice(0, 3).map((example, index) => (
                <Chip key={index} label={example} size="small" variant="outlined" />
              ))}
            </Box>
          </Paper>
        </Grid>
      </Grid>

      {/* Validation Alert */}
      {(!data.projectName.trim() || !data.projectDescription.trim()) && (
        <Alert severity="warning" sx={{ mt: 3 }}>
          <Typography variant="body2">
            <strong>Campos obrigat√≥rios:</strong> Nome do projeto e descri√ß√£o geral s√£o necess√°rios para gerar um prompt de qualidade.
          </Typography>
        </Alert>
      )}

      {(data.projectName.trim() && data.projectDescription.trim()) && (
        <Alert severity="success" sx={{ mt: 3 }}>
          <Typography variant="body2">
            <strong>√ìtimo!</strong> Voc√™ forneceu as informa√ß√µes b√°sicas necess√°rias. 
            {getWordCount(data.projectDescription + ' ' + data.businessRules + ' ' + data.technicalRequirements)} palavras no total.
          </Typography>
        </Alert>
      )}
    </Box>
  );
};

export default ProjectDescriptionStep;